name: Build and Deploy to Production

on:
  push:
    branches: ["feature/cicd"]

jobs:
  # build:
    # runs-on: ubuntu-latest
    # steps:
    #   - name: Checkout
    #     uses: "actions/checkout@v4"

    #   - name: Login Docker
    #     run: docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_TOKEN }}"

    #   - name: Build Docker image
    #     run: docker build -t ${{ secrets.IMAGE_REGISTRY }}:${{ vars.IMAGE_NAME }} -f ./app/Dockerfile ./app

    #   - name: Push to Registry
    #     run: docker push ${{ secrets.IMAGE_REGISTRY }}:${{ vars.IMAGE_NAME }}

  deploy:
    runs-on: ubuntu-latest
    # needs: build
    steps:
      - name: Checkout
        uses: "actions/checkout@v4"

      - name: Write file cicd.env
        run: |
          mkdir -p .env
          echo "IMAGE_NAME=${{ vars.IMAGE_NAME }}" > .env/cicd.env
          echo "IMAGE_REGISTRY=${{ secrets.IMAGE_REGISTRY }}" >> .env/cicd.env

      - name: Copy file docker compose production
        uses: appleboy/scp-action@v0.1.7
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          source: "docker-compose-prod.yml,.env/cicd.env"
          target: ${{ vars.PROJECT_PATH }}

      - name: Deploy to Production
        uses: appleboy/ssh-action@v1.2.0
        with:
          host: ${{ secrets.SSH_HOST }}
          username: ${{ secrets.SSH_USERNAME }}
          key: ${{ secrets.SSH_PRIVATE_KEY }}
          port: ${{ secrets.SSH_PORT }}
          script: |
            cd ${{ vars.PROJECT_PATH }}
            docker login -u "${{ secrets.DOCKER_USERNAME }}" -p "${{ secrets.DOCKER_TOKEN }}"
            docker compose -f docker-compose-prod.yml up -d
